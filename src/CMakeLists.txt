if(BUILD_TESTING)
  # want GTEST_ADD_TESTS() macro. NOT THE ACTUAL MODULE!
  include(GTEST_ADD_TESTS)

  # for the actual gtest:

  # at least in debian, they are the package only installs their source code,
  # so if one wants to use them, he needs to compile them in-tree
  include(GoogleTest)
endif()

if(WITH_PTHREADS)
  message(STATUS "Looking for PThreads")
  set(CMAKE_THREAD_PREFER_PTHREAD 1)
  find_package(Threads REQUIRED)
  if(NOT CMAKE_USE_PTHREADS_INIT)
    message(SEND_ERROR "Did not found POSIX Threads! Either make it find PThreads, or pass -DWITH_PTHREADS=OFF to disable threading.")
  else()
    message(STATUS "Looking for PThreads - found")
  endif()
else()
  message(STATUS "PThread-based threading is disabled. Not searching for PThreads")
  add_definitions(-DNO_PTHREAD)
endif()

if(WITH_OPENMP)
  message(STATUS "Looking for OpenMP")
  find_package(OpenMP)
  if(OPENMP_FOUND)
    message(STATUS "Looking for OpenMP - found")
  else()
    message(WARNING "Looking for OpenMP - failed. utilities will not use openmp-based parallelization")
  endif()
else()
  message(STATUS "OpenMP is disabled, utilities will not use openmp-based parallelization")
endif()

message(STATUS "Looking for pugixml")
if(NOT MSVC)
  find_package(Pugixml 1.2 REQUIRED)
else()
  include(Pugixml)
endif()
if(NOT Pugixml_FOUND)
  message(SEND_ERROR "Did not find Pugixml! This is bad.")
else()
  message(STATUS "Looking for pugixml - found")
  include_directories(SYSTEM ${Pugixml_INCLUDE_DIRS})
endif()

if(WITH_JPEG)
  message(STATUS "Looking for JPEG")
  find_package(JPEG REQUIRED)
  if(NOT JPEG_FOUND)
    message(SEND_ERROR "Did not find JPEG! Either make it find JPEG, or pass -DWITH_JPEG=OFF to disable JPEG.")
  else()
    message(STATUS "Looking for JPEG - found")
    include_directories(SYSTEM ${JPEG_INCLUDE_DIRS})
    add_definitions(-DHAVE_JPEG)
  endif()
else()
  message(STATUS "JPEG is disabled, DNG Lossy JPEG support won't be available.")
endif()

if (WITH_ZLIB)
  message(STATUS "Looking for ZLIB")
  find_package(ZLIB REQUIRED)
  if(NOT ZLIB_FOUND)
    message(SEND_ERROR "Did not find ZLIB! Either make it find ZLIB, or pass -DWITH_ZLIB=OFF to disable ZLIB.")
  else()
    message(STATUS "Looking for ZLIB - found")
    add_definitions(-DHAVE_ZLIB)
    include_directories(SYSTEM ${ZLIB_INCLUDE_DIRS})
  endif()
else()
  message(STATUS "ZLIB is disabled, DNG deflate support won't be available.")
endif()

include(memory-align-alloc)

CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/config.h.in" "${CMAKE_CURRENT_BINARY_DIR}/config.h")
set(CONFIG_INCLUDE_PATH "${CMAKE_CURRENT_BINARY_DIR}")

add_subdirectory(librawspeed)

if(BUILD_TOOLS)
  add_subdirectory(utilities)
endif()
